{
    "rank": 10151,
    "username": "deep_sahu",
    "score": 7,
    "finish_time": "00:40:24",
    "Q1": {
        "solve_time": "00:07:33",
        "fail_count": 0,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    bool digitCount(string num) {\n        unordered_map<char,int> m;\n        for(int i=0;i<num.length();i++)\n        {\n            m[num[i]]++;   \n        }\n        for(int i=0;i<num.length();i++)\n        {\n            if((num[i]-'0')!=m[i+'0'])\n                return false;\n        }\n        return true;\n    }\n};"
    },
    "Q2": {
        "solve_time": "00:40:24",
        "fail_count": 0,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    string largestWordCount(vector<string>& messages, vector<string>& senders) {\n        map<string,string> m;\n        for(int i=0;i<senders.size();++i)\n        {\n            m[senders[i]]+=messages[i]+' ';\n        }\n        map<string,int> m1;\n        for(auto it:m)\n        {\n            auto y=it.second;\n            stringstream ss(y);\n            int cnt=0;\n            while(ss>>y)\n            {\n                cnt++;\n            }\n            cout<<cnt<<endl;\n            m1[it.first]+=cnt;\n        }\n        priority_queue<pair<int,string>> pq;\n        for(auto s:m1)\n        {\n            pq.push({s.second,s.first});\n        }\n        vector<string> v;\n        int temp=pq.top().first;\n        while(!pq.empty() and temp==pq.top().first)\n        {\n            v.push_back(pq.top().second);\n            pq.pop();\n        }\n        sort(v.begin(),v.end());\n        return v[v.size()-1];\n        // auto it=m1.first;\n        // return it;\n        // return st;\n    }\n};"
    },
    "Q3": {},
    "Q4": {}
}
